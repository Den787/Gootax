<?php

/*
 * С помощью оператора echo выведите на страницу:
 * a. Строковую переменную
 * b. Целочисленную переменную
 * c. Переменную дробного типа
 * d. константу
 * e. число в восьмеричной нотации
 * f. число в шестнадцатеричной нотации

 */

const HUMAN1 = "Victor Victorovich";

$str = "Hello World!";
$int = 55;
$number = 8.2525;
$number_8 = 0777;
$number_16 = 0x2D;

echo $str;
echo '<br/>';
echo $int;
echo '<br/>';
echo $number;
echo '<br/>';
echo $number_8;
echo '<br/>';
echo $number_16;
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';
/*
 * 2. Повторите вывод, заключив переменные в двойные кавычки (“). Посмотрите,
 * что получится. Повторите вывод, заключив переменные в одинарные кавычки (‘).
 *  Посмотрите, что получится
 */
echo "$str";
echo '<br/>';
echo '$int';
echo '<br/>';
echo "$number";
echo '<br/>';
echo '$number_8';
echo '<br/>';
echo "$number_16";
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';
//Вывод: " - показывает как переменную, ' - переменные преобразует в текст

/*
 * 3. Выведите в восьмеричной системе числа от 10 до 20 (echo 010; echo 011;
 *  echo 012; …
 * echo 019; echo 020;) Объясните результат.
 */

echo 010 .' ';
echo 011 .' ';
echo 012 .' ';
echo 013 .' ';
echo 014 .' ';
echo 015 .' ';
echo 016 .' ';
echo 017 .' ';
//echo 018;
//echo '</br>';
//echo 019;
//echo '</br>';
echo 020 .' ';
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';
//Вывод - в восьмеричной системе не могут быть числа 8,9 - приводит к ошибке

/*
  * 4. Выведите 16 чисел в шестнадцатеричной системе, так чтобы в браузере
  * отобразилось «0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15»
 */

echo 0x0 .' ';
echo 0x1 .' ';
echo 0x2 .' ';
echo 0x3 .' ';
echo 0x4 .' ';
echo 0x5 .' ';
echo 0x6 .' ';
echo 0x7 .' ';
echo 0x8 .' ';
echo 0x9 .' ';
echo 0xA .' ';
echo 0xB .' ';
echo 0xC .' ';
echo 0xD .' ';
echo 0xE .' ';
echo 0xF .' ';
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';

/*
  * 5. Выведите на экран любое четверостишие. Для каждой новой строки используйте
  *  отдельный оператор echo. Каждая строчка должна быть отдельной строковой
  *  переменной. Также необходимо использовать переводы строки. После
  *  четверостишия поставьте инициалы автора и выделите их курсивом.
 */
echo nl2br("\"Я помню чудное мгновенье\n");
echo nl2br("Передо мной явилась ты,\n");
echo nl2br("Как мимолетное виденье,\n");
echo nl2br("Как гений чистой красоты.\"\n");
echo nl2br("<i>А.С. Пушкин</i>\n");
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';
/*для можно также использовать header('Content-type: text/plain');, 
 * вместо nl2br(), *но придется код переписывать :) 
 */

/*
 * 6. Выполните эти же действия, с помощью одного оператора echo.
 */
echo nl2br("\"Я помню чудное мгновенье\n"."Передо мной явилась ты,\n".
"Как мимолетное виденье,\n"."Как гений чистой красоты.\"\n".
"<i>А.С. Пушкин</i>\n");
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';

/*
  * 7. Попробуйте в выражении использовать разные типы, например, сложите число 
  * «10» и строку «привет». Что получится? Объясните результат.
 */
echo ('без кавычек');
echo '<br/>';
echo (10 + 5 . ' '); //15
echo (10 + 'привет' . ' '); //10, строка привет не активна
echo (10 + '5' . ' '); //15 - 5 преобразовал в число
echo (10 + '10привет' . ' '); //20 - 10привет увидел число 10 и взял его
echo (10 + 'привет10' . ' '); //10 - число 10 вконце текста поэтому игнор.
echo '<br/>';
echo ('с одинарными кавычками'); //все приводится в число, не смотря на кавычки
echo '<br/>';
echo ('10' + 5 . ' ');
echo ('10' + 'привет' . ' ');
echo ('10' + '5' . ' ');
echo ('10' + '10привет' . ' ');
echo ('10' + 'привет10' . ' ');
echo '<br/>'; 
echo ('с двойными кавычками'); //тоже самое, ничего не изменилось
echo '<br/>';
echo ("10" + 5 . ' ');
echo ("10" + "привет" . ' ');
echo ("10" + "5" . ' ');
echo ("10" + "10привет" . ' ');
echo ("10" + "привет10" . ' '); 
/* 
 * вывод: арифметические операции приводятся все в числа, если вначале слова
 * число то его посчитает. Если строка + строка то будет ошибка - для сложения 
 * строк используется канкатенация через "." 
 */
echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';

/*
  * 8. Дайте ответ на вопрос, как работает оператор xor? В каких случаях он 
  * возвращает значение true, в каких – false? Для этого напишите скрипт, 
  * который выводит значения операций со всеми возможными вариантами операндов
  *  (4 варианта). Чему равно $a xor $a для любых значений $a?
 */
$a = TRUE;
$b = FALSE;

echo(true xor true); //false 0
echo(false xor true); //true 1
echo(true xor false); //true 1
echo(false xor false); //false 0
echo($a xor $a); //false 0
echo($b xor $b); //false 0
/*
 * xor - исключающее ИЛИ, возвращает true если только один из операндов имеет 
 * значение true
 */

echo '<br/>';
echo '-----------------------------------------------------';
echo '<br/>';
